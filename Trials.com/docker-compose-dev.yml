version: "3.8"
services:
    watchtower:
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    #Currently doesn't work with MYSQL 8+, so we don't use it yet...
    # prisma:
    #     image: prismagraphql/prisma:1.34.10
    #     restart: always
    #     ports:
    #         - $PRISMA_LOCAL_PORT:$PRISMA_DOCKER_PORT
    #     depends_on:
    #         - mysql-db
    #     environment:
    #         PRISMA_CONFIG: |
    #             port: 4466
    #             databases:
    #                 default:
    #                     connector: mysql
    #                     database: trialsnp
    #                     host: mysql-db
    #                     port: $MYSQL_DOCKER_PORT
    #                     user: root
    #                     password: pass
    #                     connectionLimit: 2

    mysql-db:
        build:
            context: ./database
            dockerfile: Dockerfile
        image: rjbradach/trialsnp-sqldb
        command:
            [
                mysqld,
                --transaction-isolation=REPEATABLE-READ,
                --default-authentication-plugin=mysql_native_password,
                --character-set-server=utf8mb4,
                --collation-server=utf8mb4_unicode_ci,
                --innodb_monitor_enable=all,
                --max-connections=1001,
            ]
        restart: always
        ports:
            - $MYSQL_LOCAL_PORT:$MYSQL_DOCKER_PORT
        volumes:
            - mysql:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 10s
            retries: 10

    node-server:
        build:
            context: ./node-server
            dockerfile: Dockerfile
        image: rjbradach/trialsnp-node
        ports:
            - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
        restart: always
        depends_on:
            - mysql-db

    react-frontend:
        build:
            context: ./react-frontend
            dockerfile: Dockerfile
        image: rjbradach/trialsnp-react
        restart: always
        volumes:
            - /app/node_modules
            - ./react-frontend:/app
        environment:
            MYSQL_HOST: mysql-db
            NODE_ENV: production

        depends_on:
            - mysql-db
            - node-server
        ports:
            - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
        command: npm start
        env_file:
            - "./react-frontend/.env"

    nginx:
        depends_on:
            - node-server
        image: rjbradach/trialsnp-nginx
        restart: always
        build:
            dockerfile: Dockerfile
            context: ./nginx
        ports:
            - $NGINX_LOCAL_PORT:$NGINX_DOCKER_PORT

volumes:
    mysql: ~
