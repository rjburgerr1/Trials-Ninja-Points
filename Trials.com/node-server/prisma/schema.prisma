generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model creators {
  creator String @id @db.VarChar(45)
  runs    runs[]
}

model profiles {
  email              String   @db.VarChar(255)
  id                 String   @id @db.VarChar(29)
  create_date        DateTime @default(now()) @db.DateTime(0)
  country            String   @default("N/A") @db.VarChar(45)
  state              String   @default("N/A") @db.VarChar(30)
  gamertag           String?  @db.VarChar(25)
  aliases            String?  @db.VarChar(150)
  username           String   @unique(map: "username_UNIQUE") @db.VarChar(25)
  highest_np_run     Int      @default(0) @map("highest-np-run")
  runs               Int      @default(0)
  total_ninja_points Int      @default(0) @map("total-ninja-points")
  highest_level_pass Int      @default(0) @map("highest-level-pass")
  bio                String?  @db.VarChar(300)
}

model runs {
  rider        String           @db.VarChar(45)
  rank         Int?
  faults       Int
  time         String           @db.VarChar(9)
  track_name   String           @map("track-name") @db.VarChar(45)
  ninja_points Float?           @map("ninja-points") @db.Float
  ninja_level  Float            @map("ninja-level") @db.Float
  length       runs_length
  consistency  runs_consistency
  rating       Float?           @db.Float
  creator      String           @db.VarChar(45)
  id           String           @db.VarChar(29)
  date         DateTime         @default(now()) @db.DateTime(0)
  creators     creators         @relation(fields: [creator], references: [creator], onDelete: NoAction, onUpdate: NoAction, map: "creator")
  tracks       tracks           @relation(fields: [track_name], references: [track_name], onDelete: NoAction, onUpdate: NoAction, map: "track-name")

  @@id([track_name, id])
  @@index([creator], map: "creator_idx")
  @@index([rider], map: "rider_idx")
  @@index([track_name], map: "track-name_idx")
}

model tracks {
  track_name        String   @map("track-name") @db.VarChar(45)
  creator           String   @db.VarChar(45)
  ninja_level       Decimal? @map("ninja-level") @db.Decimal(3, 2)
  length            Decimal? @db.Decimal(3, 2)
  average_faults    Decimal? @map("average-faults") @db.Decimal(5, 2)
  consistency       Decimal? @db.Decimal(3, 2)
  rating            Decimal? @db.Decimal(2, 1)
  nRuns             Int      @default(0)
  total_rating      Decimal  @default(0.00) @map("total-rating") @db.Decimal(10, 2)
  total_consistency Decimal  @default(0.00) @map("total-consistency") @db.Decimal(10, 2)
  total_length      Decimal  @default(0.00) @map("total-length") @db.Decimal(10, 2)
  total_faults      Int      @default(0) @map("total-faults")
  total_ninja_level Decimal  @default(0.00) @map("total-ninja-level") @db.Decimal(10, 2)
  average_np        Float    @default(0.00) @map("average-np") @db.Float
  total_np          Float    @default(0.00) @map("total-np") @db.Float
  runs              runs[]

  @@id([track_name, creator])
}

model profileshistory {
  email              String   @db.VarChar(255)
  id                 String   @db.VarChar(29)
  create_date        DateTime @default(now()) @db.DateTime(0)
  country            String   @default("N/A") @db.VarChar(45)
  state              String   @default("N/A") @db.VarChar(30)
  gamertag           String?  @db.VarChar(25)
  aliases            String?  @db.VarChar(150)
  username           String   @db.VarChar(25)
  highest_np_run     Int      @default(0) @map("highest-np-run")
  runs               Int      @default(0)
  total_ninja_points Int      @default(0) @map("total-ninja-points")
  highest_level_pass Int      @default(0) @map("highest-level-pass")
  bio                String?  @db.VarChar(300)
  history_dates      DateTime @default(now()) @map("history-dates") @db.DateTime(0)
  index              Int      @id @default(autoincrement())
}

model runshistory {
  rider         String                  @db.VarChar(45)
  rank          Int?
  faults        Int
  time          String                  @db.VarChar(9)
  track_name    String                  @map("track-name") @db.VarChar(45)
  ninja_points  Float?                  @map("ninja-points") @db.Float
  ninja_level   Float                   @map("ninja-level") @db.Float
  length        runshistory_length
  consistency   runshistory_consistency
  rating        Float?                  @db.Float
  creator       String                  @db.VarChar(45)
  id            String                  @db.VarChar(29)
  date          DateTime                @default(now()) @db.DateTime(0)
  history_dates DateTime                @default(now()) @map("history-dates") @db.DateTime(0)
  index         Int                     @id @default(autoincrement())
}

model trackshistory {
  track_name        String   @map("track-name") @db.VarChar(45)
  creator           String   @db.VarChar(45)
  ninja_level       Decimal? @map("ninja-level") @db.Decimal(3, 2)
  length            Decimal? @db.Decimal(3, 2)
  average_faults    Decimal? @map("average-faults") @db.Decimal(5, 2)
  consistency       Decimal? @db.Decimal(3, 2)
  rating            Decimal? @db.Decimal(2, 1)
  nRuns             Int      @default(0)
  total_rating      Decimal  @default(0.00) @map("total-rating") @db.Decimal(10, 2)
  total_consistency Decimal  @default(0.00) @map("total-consistency") @db.Decimal(10, 2)
  total_length      Decimal  @default(0.00) @map("total-length") @db.Decimal(10, 2)
  total_faults      Int      @default(0) @map("total-faults")
  total_ninja_level Decimal  @default(0.00) @map("total-ninja-level") @db.Decimal(10, 2)
  average_np        Float    @default(0.00) @map("average-np") @db.Float
  total_np          Float    @default(0.00) @map("total-np") @db.Float
  history_dates     DateTime @default(now()) @map("history-dates") @db.DateTime(0)
  index             Int      @id @default(autoincrement())
}

enum runs_length {
  Short
  Medium
  Long
}

enum runs_consistency {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely
}

enum runshistory_length {
  Short
  Medium
  Long
}

enum runshistory_consistency {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely
}
