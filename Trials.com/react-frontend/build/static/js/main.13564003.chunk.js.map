{"version":3,"sources":["firebase.ts","contexts/auth-context.tsx","components/login.tsx","components/signup.tsx","pages/signin-signup.tsx","components/icon.tsx","components/logout.tsx","components/navbar.tsx","components/leaderboards/TableStyles.ts","components/leaderboards/main-leaderboard-columns.tsx","components/data.tsx","components/leaderboards/sticky-table.tsx","pages/dashboard.tsx","components/private-route.tsx","components/reset-password.tsx","components/update-profile.tsx","components/calculate-ninja-points.jsx","components/submit-run.tsx","pages/profile.tsx","App.tsx","index.tsx"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","defaultUser","currentUser","email","displayName","uid","signup","password","login","resetPassword","logout","updateEmail","updatePassword","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","a","createUserWithEmailAndPassword","useEffect","onAuthStateChanged","user","value","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","Provider","LoginComponent","emailRef","useRef","passwordRef","error","setError","history","useHistory","event","preventDefault","current","push","className","Alert","variant","onSubmit","type","placeholder","name","ref","disabled","to","role","SignupComponent","usernameRef","signupPrisma","username","userid","axios","post","then","response","console","log","catch","message","SigninSignup","id","onClick","container","document","getElementById","classList","remove","add","Icon","icon","faUserNinja","Logout","Button","NavBar","Navbar","fixed","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","alignRight","title","Item","Styles","styled","div","COLUMNS","Header","accessor","getData","get","result","data","resolveData","setData","StickyTable","columns","useMemo","useTable","useBlockLayout","useSticky","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","style","borderWidth","height","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","values","Dashboard","PrivateRoute","props","Component","component","rest","ResetPassword","setMessage","handleSubmit","Card","Body","Form","required","Footer","UpdateProfile","passwordConfirmRef","promises","Promise","all","finally","Group","Label","Control","defaultValue","CalcNP","CalcFaultSponginessWeight","faultSponginess","CalcTimeWeight","time","CalcNinjaLevelWeight","ninjaLevel","CalcLengthWeight","length","CalcFaultWeight","faults","Math","Number","timeMS","substring","marks","label","Stars","size","isHalf","a11y","activeColor","valuetext","SubmitRun","formik","useFormik","initialValues","trackName","creator","rating","rank","rider","ninjaPoints","actions","alert","JSON","stringify","setSubmitting","action","method","onChange","handleChange","autoFocus","Slider","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","setFieldValue","onKeyDown","evt","key","restrictFaults","target","mask","color","ratingValue","payload","setValues","getProfileInfo","undefined","params","currentUsersUsername","Profile","match","setUsername","bio","setBio","country","setCountry","runs","setRuns","highestNPRun","setHighestNPRun","setRank","totalNP","setTotalNP","createDate","setCreateDate","highestLevelPass","setHighestLevelPass","aliases","setAliases","setProfileValuesInOne","highest_np_run","total_ninja_points","create_date","highest_level_pass","App","exact","path","SignInSignUp","ReactDOM"],"mappings":"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","file":"static/js/main.13564003.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\ntype ChildrenProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst defaultUser = {\r\n  currentUser: { email: \"\", displayName: \"\", uid: \"\" },\r\n  signup: (email: string, password: string) => {},\r\n  login: (email: string, password: string) => {},\r\n  resetPassword: (email: string) => {},\r\n  logout: () => {},\r\n  updateEmail: (email: string) => {},\r\n  updatePassword: (password: string) => {},\r\n};\r\n\r\nconst AuthContext = React.createContext(defaultUser);\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }: ChildrenProps) {\r\n  const [currentUser, setCurrentUser] = useState<any>();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const signup = async (email: string, password: string) => {\r\n    return await auth.createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  function login(email: string, password: string) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email: string) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email: string) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password: string) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginComponent() {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const usernameRef = useRef<HTMLInputElement>(null); // Keep for later\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      if (emailRef.current != null && passwordRef.current != null) {\r\n        await login(emailRef.current.value, passwordRef.current.value);\r\n      }\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container sign-in-container\">\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      <form\r\n        //action=\"http://localhost:3002/sign-up-complete\"\r\n        onSubmit={handleSubmit}\r\n        // method=\"POST\"\r\n      >\r\n        <h1>Sign In</h1>\r\n\r\n        <div className=\"social-container\"></div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username/Email\"\r\n          name=\"Email\"\r\n          ref={emailRef}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          ref={passwordRef}\r\n        />\r\n        <button disabled={loading} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        <Link to=\"/forgot-password\" className=\"my-0\">\r\n          <p role=\"button\" className=\"btn-link my-1 small\">\r\n            Forgot Password?\r\n          </p>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SignupComponent = () => {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const usernameRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { currentUser } = useAuth();\r\n  const { signup } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function signupPrisma(email: string, username: string, userid: string) {\r\n    axios\r\n      .post(\"/sign-up-complete\", {\r\n        email,\r\n        username, // + any other parameters you want to send in the POST request\r\n        userid,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        // do something with response, and on response\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // do something when request was unsuccessful\r\n      });\r\n  }\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      if (\r\n        emailRef.current != null &&\r\n        usernameRef.current != null &&\r\n        passwordRef.current != null\r\n      ) {\r\n        await signup(emailRef.current.value, passwordRef.current.value);\r\n        signupPrisma(\r\n          emailRef.current.value,\r\n          usernameRef.current.value,\r\n          currentUser.uid\r\n        );\r\n      }\r\n\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container sign-up-container\">\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      <form\r\n        //action=\"http://localhost:3002/sign-up-complete\"\r\n        onSubmit={handleSubmit}\r\n        // method=\"POST\"\r\n      >\r\n        <h1>Create Account</h1>\r\n\r\n        <div className=\"social-container\"></div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          ref={usernameRef}\r\n        />\r\n        <input type=\"email\" placeholder=\"Email\" name=\"email\" ref={emailRef} />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          ref={passwordRef}\r\n        />\r\n        <button disabled={loading} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupComponent;\r\n","import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styling/signin-signup.scss\";\r\nimport Login from \"../components/login\";\r\nimport Signup from \"../components/signup\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\ninterface SigninSignupProps {\r\n  container: HTMLElement;\r\n}\r\n\r\nconst SigninSignup: React.FC<SigninSignupProps> = () => {\r\n  const SignUpTransition = () => {\r\n    const container = document.getElementById(\"container\");\r\n    if (container != null) container.classList.add(\"right-panel-active\");\r\n  };\r\n\r\n  const SignInTransition = () => {\r\n    const container = document.getElementById(\"container\");\r\n    if (container != null) container.classList.remove(\"right-panel-active\");\r\n  };\r\n  return (\r\n    //  it'd be nice if we could end up changing this outside div to Card to be consistent, but it breaks right now\r\n    //  if not, thats fine, since this is a special case we will probably only use once\r\n    <div className=\"container signin-signup\" id=\"container\">\r\n      <Signup />\r\n      <Login />\r\n      <div className=\"overlay-container\">\r\n        <div className=\"overlay\">\r\n          <div className=\"overlay-panel overlay-left\">\r\n            <h1>Welcome back!</h1>\r\n            <p>\r\n              To keep connected with us please login with your personal info\r\n            </p>\r\n            <button className=\"ghost\" id=\"signIn\" onClick={SignInTransition}>\r\n              Sign In\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"overlay-panel overlay-right\">\r\n            <h1>Hi, gamer!</h1>\r\n            <p>\r\n              Enter your personal details and start your ninja journey with us\r\n            </p>\r\n            <button className=\"ghost\" id=\"signUp\" onClick={SignUpTransition}>\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninSignup;\r\n","import React from \"react\";\r\n\r\n// get our fontawesome imports\r\nimport { faUserNinja } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Icon() {\r\n  const defaultIcon = <FontAwesomeIcon icon={faUserNinja} />;\r\n  return defaultIcon;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Logout() {\r\n  const [error, setError] = useState(\"\");\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      await logout();\r\n      history.push(\"/signin\");\r\n    } catch {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"link\" onClick={handleLogout}>\r\n      Log Out\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Icon from \"./icon\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport Logout from \"./logout\";\r\n\r\nimport { useAuth } from \"../contexts/auth-context\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand className=\"m-auto\" href=\"/\">\r\n        TNP\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n          <Nav.Link href=\"/submit-run\">Submit-Run</Nav.Link>\r\n          <NavDropdown alignRight title={<Icon />} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"profile/\">View Profile</NavDropdown.Item>\r\n            <NavDropdown.Item>\r\n              <Logout />\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Styles = styled.div`\r\n  .table {\r\n    border: 1px solid #ddd;\r\n    .tr {\r\n      :last-child {\r\n        .td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    .th,\r\n    .td {\r\n      padding: 5px;\r\n      border-bottom: 1px solid #ddd;\r\n      border-right: 1px solid #ddd;\r\n      background-color: #fff;\r\n      overflow: hidden;\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n    &.sticky {\r\n      overflow: scroll;\r\n      .header,\r\n      .footer {\r\n        position: sticky;\r\n        z-index: 1;\r\n        width: fit-content;\r\n      }\r\n      .header {\r\n        top: 0;\r\n        box-shadow: 0px 3px 3px #ccc;\r\n      }\r\n      .footer {\r\n        bottom: 0;\r\n        box-shadow: 0px -3px 3px #ccc;\r\n      }\r\n      .body {\r\n        position: relative;\r\n        z-index: 0;\r\n      }\r\n      [data-sticky-td] {\r\n        position: sticky;\r\n      }\r\n      [data-sticky-last-left-td] {\r\n        box-shadow: 2px 0px 3px #ccc;\r\n      }\r\n      [data-sticky-first-right-td] {\r\n        box-shadow: -2px 0px 3px #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export const COLUMNS = [\r\n  {\r\n    Header: \"Username\", // Header is the title for the column being displayed (can be anything)\r\n    accessor: \"username\", // accessor is based off of the prisma schemas name mapped for the database column you want\r\n  },\r\n  {\r\n    Header: \"Total NP\",\r\n    accessor: \"total_ninja_points\",\r\n  },\r\n  {\r\n    Header: \"Best Run (np)\",\r\n    accessor: \"highest_np_run\",\r\n  },\r\n  {\r\n    Header: \"Highest Level Pass\",\r\n    accessor: \"highest_level_pass\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport NavBar from \"../components/navbar\";\r\n\r\nimport \"../styling/profile.scss\";\r\nimport axios from \"axios\";\r\n\r\nexport default async function getData() {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/home\", {});\r\n  console.log(result);\r\n  //result returns object with all relevant profile info fields\r\n  return result.data;\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useTable, useBlockLayout, Column } from \"react-table\";\r\nimport { useSticky } from \"react-table-sticky\";\r\nimport { Styles } from \"./TableStyles\";\r\n\r\nimport { COLUMNS } from \"./main-leaderboard-columns\";\r\nimport \"./table.css\";\r\nimport getData from \"../data\";\r\n\r\nconst resolveData = async (setData: any) => {\r\n  try {\r\n    const data = await getData();\r\n\r\n    setData(data);\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\nexport const StickyTable = () => {\r\n  const columns: Array<Column> = useMemo(() => COLUMNS, []);\r\n  let [data, setData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    resolveData(setData);\r\n  }, []); // includes empty dependency array\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useBlockLayout,\r\n    useSticky\r\n  );\r\n  const firstPageRows = rows.slice(0, 50);\r\n  return (\r\n    <Styles>\r\n      <div\r\n        {...getTableProps()}\r\n        className=\"table sticky\"\r\n        style={{ borderWidth: 0, height: 500 }}\r\n      >\r\n        <div className=\"header\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n              {headerGroup.headers.map((column) => (\r\n                <div {...column.getHeaderProps()} className=\"th\">\r\n                  {column.render(\"Header\")}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div {...getTableBodyProps()} className=\"body\">\r\n          {firstPageRows.map((row) => {\r\n            prepareRow(row);\r\n\r\n            return (\r\n              <div {...row.getRowProps()} className=\"tr\">\r\n                {row.cells.map((cell) => (\r\n                  <div {...cell.getCellProps()} className=\"td\">\r\n                    {cell.column.Header === \"Username\" ? (\r\n                      <a href={\"profile/\" + row.values.username}>\r\n                        {cell.render(\"Cell\")}\r\n                      </a>\r\n                    ) : (\r\n                      <div>{cell.render(\"Cell\")}</div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Styles>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport NavBar from \"../components/navbar\";\r\nimport { StickyTable } from \"../components/leaderboards/sticky-table\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <StickyTable />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n  // tslint:disable-next-line:no-any\r\n  component: any;\r\n}\r\n\r\nexport default function PrivateRoute(props: PrivateRouteProps) {\r\n  const { component: Component, ...rest } = props;\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/signin\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ResetPassword() {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      if (emailRef.current != null) {\r\n        await resetPassword(emailRef.current.value);\r\n      }\r\n      setMessage(\"Check your inbox for further instructions.\");\r\n    } catch {\r\n      setError(\"Failed to reset password. Verify entered email.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"container px-0\">\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {message && <Alert variant=\"success\">{message}</Alert>}\r\n      <Card.Body className=\"mx-5\">\r\n        <h1 className=\"text-center my-4\">Password Reset</h1>\r\n        <Form onSubmit={handleSubmit} className=\"px-4\">\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            ref={emailRef}\r\n            placeholder=\"Enter your email...\"\r\n            required\r\n            onSubmit={handleSubmit}\r\n            className=\"my-3\"\r\n          />\r\n          <button disabled={loading} className=\"w-100\" type=\"submit\">\r\n            Reset Password\r\n          </button>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">\r\n          <Link className=\"btn-link\" to=\"/signin\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-center\">\r\n        Need an account?{\" \"}\r\n        <Link className=\"btn-link\" to=\"/signin\">\r\n          Sign Up\r\n        </Link>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const passwordConfirmRef = useRef<HTMLInputElement>(null);\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n    if (passwordRef.current != null && passwordConfirmRef.current != null) {\r\n      if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n        return setError(\"Passwords do not match\");\r\n      }\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n    if (emailRef.current != null && passwordRef.current != null) {\r\n      if (emailRef.current.value !== currentUser.email) {\r\n        promises.push(updateEmail(emailRef.current.value));\r\n      }\r\n      if (passwordRef.current.value) {\r\n        promises.push(updatePassword(passwordRef.current.value));\r\n      }\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export function CalcNP(props) {\r\n  const faultSponginessWeight = CalcFaultSponginessWeight(\r\n    props.faultSponginess\r\n  );\r\n  const timeWeight = CalcTimeWeight(props.time);\r\n  const ninjaLevelWeight = CalcNinjaLevelWeight(props.ninjaLevel);\r\n  const lengthWeight = CalcLengthWeight(props.length);\r\n  const faultWeight = CalcFaultWeight(props.faults);\r\n\r\n  const ninjaPoints =\r\n    faultSponginessWeight *\r\n    timeWeight *\r\n    ninjaLevelWeight *\r\n    lengthWeight *\r\n    faultWeight *\r\n    1.3;\r\n  return ninjaPoints;\r\n}\r\n\r\nconst CalcFaultWeight = (faults) => {\r\n  // faults is garnered from calculate-ninja-points props\r\n  let faultWeight = Math.log(Number(faults) + 10) / Math.log(0.2) + 6;\r\n  return faultWeight;\r\n};\r\n\r\nconst CalcLengthWeight = (length) => {\r\n  // length is garnered from calculate-ninja-points props\r\n  switch (length) {\r\n    case \"Short\":\r\n      return 1.1;\r\n    case \"Medium\":\r\n      return 1.4;\r\n    case \"Long\":\r\n      return 1.75;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nconst CalcNinjaLevelWeight = (ninjaLevel) => {\r\n  // ninjaLevel is garnered from calculate-ninja-points props\r\n  const ninjaLevelWeight = ninjaLevel * ninjaLevel;\r\n  return ninjaLevelWeight;\r\n};\r\n\r\nconst CalcTimeWeight = (time) => {\r\n  // time is garnered from calculate-ninja-points props\r\n  const timeMS =\r\n    Number(time.substring(0, 2) * 60000) + // Minutes to ms\r\n    Number(time.substring(3, 5) * 1000) + // Seconds to ms\r\n    Number(time.substring(6, 9)); // ms\r\n  return Number(-1 * ((1 / 1800000) * timeMS) + 2.3);\r\n};\r\n\r\nconst CalcFaultSponginessWeight = (faultSponginess) => {\r\n  // faultSponginess is garnered from calculate-ninja-points props\r\n  switch (faultSponginess) {\r\n    case \"Not At All\":\r\n      return 0.9;\r\n    case \"Not Very\":\r\n      return 1.2;\r\n    case \"Moderately\":\r\n      return 1.6;\r\n    case \"Very\":\r\n      return 2;\r\n    case \"Extremely\":\r\n      return 2.3;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nexport default CalcNP;\r\n","import React from \"react\";\r\n\r\nimport \"../styling/form.scss\";\r\nimport { useFormik, Formik } from \"formik\";\r\nimport InputMask from \"react-input-mask\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport NavBar from \"./navbar\";\r\nimport { CalcNP } from \"./calculate-ninja-points\";\r\n\r\n// Shape of form values\r\ninterface FormValues {\r\n  trackName: string;\r\n  creator: string;\r\n  faults: number;\r\n  time: string;\r\n  length: string;\r\n  faultSponginess: string;\r\n  ninjaLevel: number;\r\n  rating: number;\r\n  rank: number;\r\n  rider: string;\r\n  ninjaPoints: number;\r\n}\r\n\r\nconst SubmitRun = () => {\r\n  // According to formkik documentation, use formik values in place of props to prevent bugs with formik and also prevent having two versions of the same prop\r\n  // needing to be maintained inside props and formik values\r\n  const initialValues: FormValues = {\r\n    trackName: \"\",\r\n    creator: \"\",\r\n    faults: 0,\r\n    time: \"\",\r\n    length: \"\",\r\n    faultSponginess: \"\",\r\n    ninjaLevel: 0,\r\n    rating: 0,\r\n    rank: 0,\r\n    rider: \"\",\r\n    ninjaPoints: 0, // NinjaPoints are not inside the form but these initial values act as props for this component so storing ninjapoints here feels right\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: { ...initialValues },\r\n    onSubmit() {\r\n      console.log(formik.values);\r\n    },\r\n  });\r\n\r\n  const setRating = (ratingValue: number) => {\r\n    formik.setFieldValue(\"rating\", ratingValue);\r\n  };\r\n\r\n  const restrictFaults = (value: any) => {\r\n    if ((value < 500 && value >= 0) || value === \"\") {\r\n      formik.setFieldValue(\"faults\", value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div id=\"submit-run-form\">\r\n        <Formik\r\n          initialValues={formik.initialValues}\r\n          onSubmit={(values, actions) => {\r\n            console.log({ values, actions });\r\n            alert(JSON.stringify(values, null, 2));\r\n            actions.setSubmitting(false);\r\n          }}\r\n        >\r\n          <form action=\"http://localhost:3002/submitted-run\" method=\"POST\">\r\n            <div className=\"form-inline-group\">\r\n              <label>Rider</label>\r\n              <input\r\n                placeholder=\"RJ Burgerr1\"\r\n                id=\"rider\"\r\n                name=\"rider\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.rider}\r\n                autoFocus\r\n              />\r\n\r\n              <label>Track Name</label>\r\n              <input\r\n                placeholder=\"Turbine Terror\"\r\n                id=\"trackName\"\r\n                name=\"trackName\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.trackName}\r\n                autoFocus\r\n              />\r\n\r\n              <label>Creator</label>\r\n              <input\r\n                placeholder=\"Slikscythez\"\r\n                id=\"creator\"\r\n                name=\"creator\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.creator}\r\n              />\r\n\r\n              <label>Rank</label>\r\n              <input\r\n                placeholder=\"7\"\r\n                id=\"rank\"\r\n                name=\"rank\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.rank}\r\n                autoFocus\r\n              />\r\n\r\n              <label>Ninja Level</label>\r\n              <Slider\r\n                id=\"slider\"\r\n                defaultValue={0.5}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-custom\"\r\n                step={0.5}\r\n                min={0.5}\r\n                max={8.5}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n                name=\"ninjaLevel\"\r\n                onChange={(event, value) =>\r\n                  formik.setFieldValue(\"ninjaLevel\", value)\r\n                }\r\n              />\r\n\r\n              <label>Faults</label>\r\n              <input\r\n                placeholder=\"241\"\r\n                id=\"faults\"\r\n                name=\"faults\"\r\n                type=\"number\"\r\n                onKeyDown={(evt) =>\r\n                  (evt.key === \"e\" ||\r\n                    evt.key === \"E\" ||\r\n                    evt.key === \"-\" ||\r\n                    evt.key === \"+\" ||\r\n                    evt.key === \".\") &&\r\n                  evt.preventDefault()\r\n                }\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  const { value } = event.target;\r\n                  restrictFaults(value);\r\n                }}\r\n                value={formik.values.faults}\r\n              />\r\n\r\n              <label>Time</label>\r\n              <InputMask\r\n                placeholder=\"12:33.677\"\r\n                mask=\"99:99.999\"\r\n                name=\"time\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.time}\r\n              ></InputMask>\r\n\r\n              <label>Length</label>\r\n              <select\r\n                name=\"length\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.length}\r\n              >\r\n                <option value=\"\" label=\"Select Length of track\" />\r\n                <option value=\"Short\" label=\"Short\" />\r\n                <option value=\"Medium\" label=\"Medium\" />\r\n                <option value=\"Long\" label=\"Long\" />\r\n              </select>\r\n\r\n              <label>Fault Sponginess</label>\r\n              <select\r\n                name=\"faultSponginess\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.faultSponginess}\r\n              >\r\n                <option value=\"\" label=\"Select Fault Sponginess of track\" />\r\n                <option value=\"Not At All\" label=\"Not At All\" />\r\n                <option value=\"Not Very\" label=\"Not Very\" />\r\n                <option value=\"Moderately\" label=\"Moderately\" />\r\n                <option value=\"Very\" label=\"Very\" />\r\n                <option value=\"Extremely\" label=\"Extremely\" />\r\n              </select>\r\n            </div>\r\n            <label id=\"star-rating\">How much did you like the track?</label>\r\n            <ReactStars\r\n              {...Stars}\r\n              id=\"star-rating\"\r\n              color=\"#5d737eff\"\r\n              activeColor=\"#fdd643ff\"\r\n              onChange={setRating}\r\n            />\r\n\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"rating\"\r\n              id=\"rating\"\r\n              value={formik.values.rating}\r\n            />\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"ninjaPoints\"\r\n              id=\"ninjaPoints\"\r\n              value={formik.values.ninjaPoints}\r\n            />\r\n            <button\r\n              id=\"form-button\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                // This onClick is formatted in such a way to prevent stale values being sent to database.\r\n                // when formik values such as ninjaPoints are set with setFieldValue, the component will not rerender after submit.\r\n                // This is why we have to calculate the NP value and inject it into formiks values inside the onClick signature.\r\n                // This could be avoided with a change from using formik.values to useing props. However, there are benefits to using formik.values as \"props\" with forms\r\n                const ninjaPoints = CalcNP({ ...formik.values });\r\n                const payload = { ...formik.values, ninjaPoints: ninjaPoints }; // Construct the new payload, inject ninjaPoints that have just been calculated\r\n                formik.setValues(payload); // Updates Formik's internal state\r\n                formik.setSubmitting(false);\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst marks = [\r\n  {\r\n    value: 1,\r\n    label: \"1\",\r\n  },\r\n\r\n  {\r\n    value: 2,\r\n    label: \"2\",\r\n  },\r\n\r\n  {\r\n    value: 3,\r\n    label: \"3\",\r\n  },\r\n\r\n  {\r\n    value: 4,\r\n    label: \"4\",\r\n  },\r\n\r\n  {\r\n    value: 5,\r\n    label: \"5\",\r\n  },\r\n\r\n  {\r\n    value: 6,\r\n    label: \"6\",\r\n  },\r\n\r\n  {\r\n    value: 7,\r\n    label: \"7\",\r\n  },\r\n\r\n  {\r\n    value: 8,\r\n    label: \"8\",\r\n  },\r\n];\r\n\r\nconst Stars = {\r\n  size: 50,\r\n  value: 0,\r\n  isHalf: true,\r\n  a11y: true,\r\n  activeColor: \"blue\",\r\n};\r\n\r\nfunction valuetext(value: number) {\r\n  return `${value}`;\r\n}\r\n\r\nexport default SubmitRun;\r\n","import React, { useState } from \"react\";\r\nimport NavBar from \"../components/navbar\";\r\n\r\nimport \"../styling/profile.scss\";\r\nimport axios from \"axios\";\r\nimport Icon from \"../components/icon\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\n\r\nconst getUsername = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/username\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.username;\r\n};\r\n\r\nconst getBio = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/bio\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.bio;\r\n};\r\n\r\nconst getCountry = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/country\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.country;\r\n};\r\nconst getRuns = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/number-of-runs\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.runs;\r\n};\r\n\r\nconst getHighestRun = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/highest-run\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.highest_np_run;\r\n};\r\n\r\nconst getRank = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/rank\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.rank;\r\n};\r\n\r\nconst getTotalNP = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/total-np\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.total_ninja_points;\r\n};\r\n\r\nconst getCreateDate = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/create-date\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.create_date;\r\n};\r\n\r\nconst getHighestLevelPass = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/highest-level-pass\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.highest_level_pass;\r\n};\r\n\r\nconst getAliases = async (userID: string) => {\r\n  // Currently only work for retrieving the current users data\r\n  const result = await axios.get(\"/aliases\", {\r\n    params: {\r\n      uid: userID,\r\n    },\r\n  });\r\n  return result.data.aliases;\r\n};\r\n\r\nconst getProfileInfo = async (user: string, currentUser: any) => {\r\n  let result;\r\n  if (user === undefined) {\r\n    const currentUsersUsername = await axios.get(\"/username\", {\r\n      params: {\r\n        uid: currentUser.uid,\r\n      },\r\n    });\r\n    result = await axios.get(\"/profile-info\", {\r\n      params: {\r\n        username: currentUsersUsername.data.username,\r\n      },\r\n    });\r\n  } else {\r\n    // Currently only work for retrieving the current users data\r\n    result = await axios.get(\"/profile-info\", {\r\n      params: {\r\n        username: user,\r\n      },\r\n    });\r\n  }\r\n  //result returns object with all relevant profile info fields\r\n  return result.data;\r\n};\r\nconst Profile: React.FC = (props: any) => {\r\n  const { currentUser } = useAuth();\r\n  const [username, setUsername] = useState(\r\n    props.match.params.user ? props.match.params.user : \"\"\r\n  );\r\n  const [bio, setBio] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [runs, setRuns] = useState(0);\r\n  const [highestNPRun, setHighestNPRun] = useState(0);\r\n  const [rank, setRank] = useState(0);\r\n  const [totalNP, setTotalNP] = useState(0);\r\n  const [createDate, setCreateDate] = useState(\"\");\r\n  const [highestLevelPass, setHighestLevelPass] = useState(\"\");\r\n  const [aliases, setAliases] = useState(\"\");\r\n\r\n  setProfileValuesInOne(\r\n    setRuns,\r\n    setBio,\r\n    setUsername,\r\n    setCountry,\r\n    setHighestNPRun,\r\n    setRank,\r\n    setTotalNP,\r\n    setCreateDate,\r\n    setHighestLevelPass,\r\n    setAliases,\r\n    currentUser,\r\n    username\r\n  );\r\n\r\n  return (\r\n    <div className=\"profile-banner\">\r\n      <NavBar />\r\n      <div className=\"grid-container\">\r\n        <div className=\"grid-item\">\r\n          <Icon /> {username}\r\n        </div>\r\n        <div className=\"grid-item\">Bio - {bio}</div>\r\n        <div className=\"grid-item\">Country - {country}</div>\r\n        <div className=\"grid-item\"># of Runs -{runs}</div>\r\n\r\n        <div className=\"grid-item\">\r\n          Highest Ninja Points Run - {highestNPRun}\r\n        </div>\r\n        <div className=\"grid-item\">Rank - {rank}</div>\r\n        <div className=\"grid-item\">Total Ninja Points - {totalNP}</div>\r\n        <div className=\"grid-item\">Account Created - {createDate}</div>\r\n        <div className=\"grid-item\">Aliases - {aliases}</div>\r\n        <div className=\"grid-item\">Highest Level Pass - {highestLevelPass}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n\r\nconst setProfileValuesInOne = (\r\n  setRuns: any,\r\n  setBio: any,\r\n  setUsername: any,\r\n  setCountry: any,\r\n  setHighestNPRun: any,\r\n  setRank: any,\r\n  setTotalNP: any,\r\n  setCreateDate: any,\r\n  setHighestLevelPass: any,\r\n  setAliases: any,\r\n  currentUser: any,\r\n  user: string\r\n) => {\r\n  getProfileInfo(user, currentUser).then((value) => {\r\n    setRuns(value.runs);\r\n    setBio(value.bio);\r\n    setUsername(value.username);\r\n    setCountry(value.country);\r\n    setHighestNPRun(value.highest_np_run);\r\n    setRank(value.rank);\r\n    setTotalNP(value.total_ninja_points);\r\n    setCreateDate(value.create_date);\r\n    setHighestLevelPass(value.highest_level_pass);\r\n    setAliases(value.aliases);\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport SignInSignUp from \"./pages/signin-signup\";\r\nimport { AuthProvider } from \"./contexts/auth-context\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport PrivateRoute from \"./components/private-route\";\r\nimport ResetPassword from \"./components/reset-password\";\r\nimport UpdateProfile from \"./components/update-profile\";\r\nimport SubmitRun from \"./components/submit-run\";\r\nimport Profile from \"./pages/profile\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/signin\" component={SignInSignUp} />\r\n          <Route path=\"/forgot-password\" component={ResetPassword} />\r\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n          <PrivateRoute path=\"/submit-run\" component={SubmitRun} />\r\n          <PrivateRoute path=\"/profile/:user?\" component={Profile} />\r\n        </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}