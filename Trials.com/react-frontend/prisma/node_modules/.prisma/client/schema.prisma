generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:pass@localhost:3306/trialsnp"
}

model runs {
  rider           String
  rank            Int?
  faults          Int
  time            String
  trackName       String                @map("track-name")
  ninjaPoints     Float?                @map("ninja-points")
  ninjaLevel      Float                 @map("ninja-level")
  length          runs_length
  faultSponginess runs_fault_sponginess @map("fault-sponginess")
  rating          Float?
  riders          riders                @relation(fields: [rider], references: [rider])

  @@id([rider, trackName])
  @@index([rider], name: "rider_idx")
}

model tracks {
  track_name       String                   @map("track-name")
  id               Int                      @id @default(autoincrement())
  creator          String
  ninja_level      String?                  @map("ninja-level")
  length           tracks_length?
  average_faults   Int?                     @map("average-faults")
  fault_sponginess tracks_fault_sponginess? @map("fault-sponginess")
}

model riders {
  rider String @id
  runs  runs[]
}

model profiles {
  email       String
  id          String   @id
  create_date DateTime @default(now())
  country     String?
  state       String?
  gamertag    String?
  aliases     String?
  username    String
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled.
// model weightage {
  // rider            String
  // rank             Int?
  // faults           Int
  // time             String
  // track_name       String                     @map("track-name")
  // ninja_points     Float?                     @map("ninja-points")
  // ninja_level      Float                      @map("ninja-level")
  // length           weightage_length
  // fault_sponginess weightage_fault_sponginess @map("fault-sponginess")
  // rating           Float?
  // nHighestRun      Int                        @default(0)
// }

enum runs_length {
  Short
  Medium
  Long
}

enum runs_fault_sponginess {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely

   @@map("runs_fault-sponginess")
}

enum tracks_length {
  short
  medium
  long
}

enum tracks_fault_sponginess {
  not_at_all @map("not at all")
  not_very @map("not very")
  moderately
  very
  extremely

   @@map("tracks_fault-sponginess")
}

enum weightage_length {
  Short
  Medium
  Long
}

enum weightage_fault_sponginess {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely

   @@map("weightage_fault-sponginess")
}
