generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:pass@localhost:3306/trialsnp"
}

model creators {
  creator String @id @db.VarChar(45)
  runs    runs[]
}

model profiles {
  email              String   @db.VarChar(255)
  id                 String   @id @db.VarChar(29)
  create_date        DateTime @default(now()) @db.DateTime(0)
  country            String?  @db.VarChar(45)
  state              String?  @db.VarChar(45)
  gamertag           String?  @db.VarChar(45)
  aliases            String?  @db.VarChar(45)
  username           String   @unique @db.VarChar(45)
  highest_np_run     Int?     @map("highest-np-run")
  runs               Int?
  total_ninja_points Int?     @map("total-ninja-points")
  highest_level_pass Int?     @map("highest-level-pass")
  rank               Int?
  bio                String?  @db.VarChar(300)
}

model riders {
  rider String @id @db.VarChar(45)
  runs  runs[]
}

model runs {
  rider            String                @db.VarChar(45)
  rank             Int?
  faults           Int
  time             String                @db.VarChar(9)
  track_name       String                @map("track-name") @db.VarChar(45)
  ninja_points     Decimal?              @map("ninja-points") @db.Decimal(10, 0)
  ninja_level      Decimal               @map("ninja-level") @db.Decimal(10, 0)
  length           runs_length
  fault_sponginess runs_fault_sponginess @map("fault-sponginess")
  rating           Decimal?              @db.Decimal(10, 0)
  creator          String                @db.VarChar(45)
  creators         creators              @relation(fields: [creator], references: [creator])
  riders           riders                @relation(fields: [rider], references: [rider])
  tracks           tracks                @relation(fields: [track_name], references: [track_name])

  @@id([rider, track_name])
  @@index([creator], name: "creator_idx")
  @@index([rider], name: "rider_idx")
  @@index([track_name], name: "track-name_idx")
}

model tracks {
  track_name       String                   @map("track-name") @db.VarChar(45)
  creator          String                   @db.VarChar(45)
  ninja_level      String?                  @map("ninja-level") @db.VarChar(45)
  length           tracks_length?
  average_faults   Int?                     @map("average-faults")
  fault_sponginess tracks_fault_sponginess? @map("fault-sponginess")
  runs             runs[]

  @@id([track_name, creator])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model weightage {
  rider            String                     @db.VarChar(45)
  rank             Int?
  faults           Int
  time             String                     @db.VarChar(9)
  track_name       String                     @map("track-name") @db.VarChar(45)
  ninja_points     Decimal?                   @map("ninja-points") @db.Decimal(10, 0)
  ninja_level      Decimal                    @map("ninja-level") @db.Decimal(10, 0)
  length           weightage_length
  fault_sponginess weightage_fault_sponginess @map("fault-sponginess")
  rating           Decimal?                   @db.Decimal(10, 0)
  nHighestRun      BigInt                     @default(0) @db.UnsignedBigInt

  @@ignore
}

enum runs_length {
  Short
  Medium
  Long
}

enum runs_fault_sponginess {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely

   @@map("runs_fault-sponginess")
}

enum tracks_length {
  short
  medium
  long
}

enum tracks_fault_sponginess {
  not_at_all @map("not at all")
  not_very @map("not very")
  moderately
  very
  extremely

   @@map("tracks_fault-sponginess")
}

enum weightage_length {
  Short
  Medium
  Long
}

enum weightage_fault_sponginess {
  Not_At_All @map("Not At All")
  Not_Very @map("Not Very")
  Moderately
  Very
  Extremely

   @@map("weightage_fault-sponginess")
}
