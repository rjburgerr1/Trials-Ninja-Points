@use "../components/buttons";
@use "../components/input";
@use "../abstracts/colors" as *;

@mixin leaderboard {
    @include input.slider;

    > .leaderboard-table {
        -ms-overflow-style: none; // Hide Scrollbar Internet Explorer 10+

        //Specifies the height of the leaderboard. the extra 1px includes the 1px border at the bottom of the lb
        height: 600px;
        overflow-y: scroll; // Hide Scrollbar for table, with browser compatibility
        scrollbar-width: none; // Hide Scrollbar Firefox

        &::-webkit-scrollbar {
            // Hide Scrollbar
            height: 0;
            width: 0;
        }

        > .leaderboard-header-container {
            position: sticky;
            top: 0;

            > .leaderboard-header {
                background-color: $mustard;
                font-weight: bold;

                > .leaderboard-header-row {
                    // These columns are weird. Here is the layout for each:
                    // For every header column value, like "Username", there are three elements within that column area.
                    // The three items consist of the column name value, the sorting icon, and an invisible sorting icon.
                    // The point of the three elements is to center the column name in the middle of the parent container.
                    // The invisible sorting icon just matches the width of the sorting icon and makes centering the column
                    // name easy regardless of the width of sorting icon itself.
                    > .leaderboard-header-row-column {
                        display: flex !important; // Override element.style because JS is injecting inline-block as the style
                        justify-content: center;
                        transition: 0.4s;
                        border-left: 1px solid $black;
                        border-right: 1px solid $black;
                        .table-header-filter {
                        }

                        &:hover {
                            color: $cadet;
                        }

                        > .column-sort-icon {
                            margin-left: auto;
                            margin-right: 2%; // These margins must match .invisible-element

                            > .column-sort-icon-invisible {
                                visibility: hidden; // When no sorting is active
                            }
                        }

                        > .invisible-element {
                            margin-left: 2%;
                            margin-right: auto; // These margins must match .column-sort-icon
                            visibility: hidden;
                        }

                        > .table-header-info-tip {
                            margin-left: 2%;
                            margin-right: auto; // These margins must match .column-sort-icon

                            > .info-tip {
                                background-color: $oxford-blue-accent-light;
                                color: $black;
                            }
                        }

                        > .leaderboard-header-row-value {
                            text-align: center;
                            white-space: nowrap;
                        }
                    }
                }
            }
        }

        > .leaderboard-body {
            > .leaderboard-body-row {
                align-items: center;
                border-bottom: 1px solid $black;
                display: flex;

                &:nth-child(even) {
                    background-color: lighten($oxford-blue, 20%);

                    &:hover {
                        background-color: lighten($oxford-blue, 30%);
                    }
                }

                &:nth-child(odd) {
                    background-color: lighten($oxford-blue, 10%);

                    &:hover {
                        background-color: lighten($oxford-blue, 30%);
                    }
                }

                > .leaderboard-body-row-value {
                    color: $white;
                    height: 100%;
                    transition: 0.4s;

                    > .country-flag {
                        font-size: 2em;
                    }

                    > a {
                        color: $mustard;
                    }

                    &:hover {
                        color: $mustard;
                    }

                    text-align: center;
                }
            }
        }
    }
}

@mixin filters {
    > .global-filter {
        background-color: $mustard;
        color: $black;
        display: flex;
        margin-bottom: 0.8em;
        width: 4em;

        > .label {
            padding: 0.3em;
        }

        > .search-input {
        }
    }
}

@mixin leaderboard-info {
    display: flex;
    justify-content: space-between;
    margin-top: 0.175rem;

    > .page-info {
        display: flex;
        flex-grow: 1;
        justify-content: center;

        > .page-number-container {
            color: $white;
            margin-left: 5%;
            margin-right: 5%;
            white-space: nowrap;

            > .page-number {
                color: $mustard;
            }
        }

        > .page-number-input-container {
            display: flex;

            > .page-number-input {
                background-color: $oxford-blue-accent;
                border: none;
                height: 25px;
                min-width: 0;
                text-align: center;
                width: 50px;
            }

            > .page-label {
                background-color: $mustard;
                border: 1px solid $mustard;
                color: $black;
                height: 25px;
                padding-left: 3%;
                padding-right: 3%;
            }
        }

        > .show-page-size {
            background-color: $oxford-blue-accent;
            border: none;
            height: 25px;
            text-align: center;
        }
    }

    > .page-number-nav {
        :nth-child(n) {
            @include buttons.button;
        }
    }
}
